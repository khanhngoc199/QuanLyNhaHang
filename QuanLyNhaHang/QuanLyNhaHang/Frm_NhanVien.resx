<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MANV.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="MABP.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="TENNV.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="GIOITINH.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="NGAYSINH.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="DIACHI.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="DIENTHOAI.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="TENBP.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="errorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAUAAAAQgAAAGYAAACLAAAAmQAAAJkAAACZAAAAkwAAAIYAAABaAAAAGwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAA
        AEYAAACWBAQBwwICAOEfHgW8KSkmwra2qtvLy73o1dXI79XVyO+CgnrGHR0FwEE/CsUGBgHWBAQBvQAA
        AFYAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AEMEBAHDKCgHv1dVDdUCAgDkDQ0ByigoB7+cnJHP5eXW/+Xl1v/l5db/5eXW/8bGuOMfHQW/dHIS/xIS
        A8ZsahHvNDIIwQMDAL4AAAAkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABpGRgEwG9uEfd0chL/WlkO2CUkBcBMSQvOAQEB59/f0Pfl5db/5eXW/+Xl1v/l5db/4uLU+w8P
        BMZxbxL5BgYB1Do6CcN0chL/ZWQQ5QgIAccAAAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AA//gAAf/8AH///gH///8D////x///////8=
</value>
  </data>
</root>